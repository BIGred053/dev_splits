# frozen_string_literal: true

class ApplicationController < ActionController::Base
  before_action :event_preprocessing, only: [:event_handler]

  def home; end

  def event_handler; end

  private

  def event_preprocessing
    get_payload_request(request)
    verify_webhook_signature
    API::GitHubClient.app_client
    # Authenticate the app installation in order to run API operations
    API::GitHubClient.installation_client(@payload)
  end

  # Saves the raw payload and converts the payload to JSON format
  def get_payload_request(request)
    request.body.rewind
    # The raw text of the body is required for webhook signature verification
    @payload_raw = request.body.read
    begin
      @payload = JSON.parse @payload_raw
    rescue StandardError => e
      raise "Invalid JSON (#{e}): #{@payload_raw}"
    end
  end

  # Check X-Hub-Signature to confirm that this webhook was generated by
  # GitHub, and not a malicious third party.
  def verify_webhook_signature
    their_signature_header = request.env['HTTP_X_HUB_SIGNATURE'] || 'sha1='
    method, their_digest = their_signature_header.split('=')
    our_digest = OpenSSL::HMAC.hexdigest(method, ENV['GITHUB_WEBHOOK_SECRET'], @payload_raw)
    halt 401 unless their_digest == our_digest

    log_action
  end

  def log_action
    Rails.logger.debug "---- received event #{request.env['HTTP_X_GITHUB_EVENT']}"
    Rails.logger.debug "----    action #{@payload['action']}" unless @payload['action'].nil?
  end
end
